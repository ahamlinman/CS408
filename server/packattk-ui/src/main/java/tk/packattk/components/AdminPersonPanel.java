package tk.packattk.components;

import java.util.Collection;

import tk.packattk.components.listeners.PersonSelectListener;
import tk.packattk.utils.DatabaseWrappers;
import tk.packattk.utils.Person;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.event.FieldEvents.TextChangeEvent;
import com.vaadin.event.FieldEvents.TextChangeListener;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.AbstractTextField.TextChangeEventMode;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class AdminPersonPanel extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private VerticalLayout verticalLayout_1;

	@AutoGenerated
	private Table person_table;

	@AutoGenerated
	private TextField filter_field;

	private BeanItemContainer<Person> personContainer;
	private PersonSelectListener selectListener;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public AdminPersonPanel() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		personContainer = new BeanItemContainer<Person>(Person.class);
		personContainer.addAll(getPersonList());
		personContainer.sort(new Object[] { "lastName" }, new boolean[] { true });

		person_table.setContainerDataSource(personContainer);
		person_table.setVisibleColumns("lastName", "firstName", "location");
		person_table.setColumnHeaders("Last Name", "First Name", "Location");
		person_table.setSelectable(true);
		person_table.setImmediate(true);
		person_table.addValueChangeListener(new ValueChangeListener() {
			@Override
			public void valueChange(ValueChangeEvent event) {
				if(selectListener != null) {
					selectListener.personSelected((Person) person_table.getValue());
				}
			}
		});

		filter_field.addTextChangeListener(new TextChangeListener() {
			@Override
			public void textChange(TextChangeEvent event) {
				String value = event.getText();
				if(value.isEmpty()) {
					personContainer.removeAllContainerFilters();
				} else {
					personContainer.addContainerFilter("lastName", value, true, true);
				}
			}
		});
		filter_field.setImmediate(true);
		filter_field.setTextChangeEventMode(TextChangeEventMode.EAGER);
	}
	
	public void setPersonSelectListener(PersonSelectListener listener) {
		selectListener = listener;
	}

	public Person getPerson() {
		return (Person) person_table.getValue();
	}

	public void clear() {
		filter_field.setValue("");
		personContainer.removeAllContainerFilters();
		person_table.setValue(null);
	}

	private Collection<Person> getPersonList() {
		return DatabaseWrappers.getPeople();
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// verticalLayout_1
		verticalLayout_1 = buildVerticalLayout_1();
		mainLayout.addComponent(verticalLayout_1, "top:0.0px;left:0.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_1() {
		// common part: create layout
		verticalLayout_1 = new VerticalLayout();
		verticalLayout_1.setImmediate(false);
		verticalLayout_1.setWidth("100.0%");
		verticalLayout_1.setHeight("-1px");
		verticalLayout_1.setMargin(false);
		
		// filter_field
		filter_field = new TextField();
		filter_field.setCaption("Filter by Last Name");
		filter_field.setImmediate(false);
		filter_field.setWidth("100.0%");
		filter_field.setHeight("-1px");
		verticalLayout_1.addComponent(filter_field);
		verticalLayout_1.setExpandRatio(filter_field, 1.0f);
		
		// person_table
		person_table = new Table();
		person_table.setCaption("People");
		person_table.setImmediate(false);
		person_table.setWidth("100.0%");
		person_table.setHeight("-1px");
		verticalLayout_1.addComponent(person_table);
		verticalLayout_1.setExpandRatio(person_table, 1.0f);
		
		return verticalLayout_1;
	}

}
