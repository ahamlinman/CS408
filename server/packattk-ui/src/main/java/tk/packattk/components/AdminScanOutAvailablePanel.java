package tk.packattk.components;

import java.util.Collection;

import tk.packattk.utils.DatabaseWrappers;
import tk.packattk.utils.Package;
import tk.packattk.utils.Person;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.event.FieldEvents.TextChangeEvent;
import com.vaadin.event.FieldEvents.TextChangeListener;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class AdminScanOutAvailablePanel extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private VerticalLayout verticalLayout_1;
	@AutoGenerated
	private Table package_table;
	@AutoGenerated
	private TextField pid_field;
	private BeanItemContainer<Package> packageContainer;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public AdminScanOutAvailablePanel() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		packageContainer = new BeanItemContainer<Package>(Package.class);
		package_table.setContainerDataSource(packageContainer);
		package_table.setVisibleColumns("tracking", "location", "name");
		package_table.setColumnHeaders("Tracking #", "Location", "Name");

		pid_field.addTextChangeListener(new TextChangeListener() {
			@Override
			public void textChange(TextChangeEvent event) {
				String pid = event.getText();
				Person p = DatabaseWrappers.getPerson(pid);
				if(p != null) {
					Collection<Package> packages = DatabaseWrappers.getPackages(p);
					packageContainer.removeAllItems();
					packageContainer.addAll(packages);
					pid_field.setEnabled(false);
				} else {
					packageContainer.removeAllItems();
				}
			}
		});
	}

	public Package checkOutPackage(String tracking) {
		Package r = null;

		for(Package p : packageContainer.getItemIds()) {
			if(p.getTracking().equals(tracking)) {
				r = p;
				break;
			}
		}

		if(r != null) {
			packageContainer.removeItem(r);
		}

		return r;
	}
	
	public void clear() {
		packageContainer.removeAllItems();
		pid_field.setValue("");
		pid_field.setEnabled(true);
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// verticalLayout_1
		verticalLayout_1 = buildVerticalLayout_1();
		mainLayout.addComponent(verticalLayout_1, "top:0.0px;left:0.0px;");

		return mainLayout;
	}

	@AutoGenerated
	private VerticalLayout buildVerticalLayout_1() {
		// common part: create layout
		verticalLayout_1 = new VerticalLayout();
		verticalLayout_1.setImmediate(false);
		verticalLayout_1.setWidth("100.0%");
		verticalLayout_1.setHeight("-1px");
		verticalLayout_1.setMargin(false);

		// pid_field
		pid_field = new TextField();
		pid_field.setCaption("Scan PUID Here");
		pid_field.setImmediate(false);
		pid_field.setWidth("100.0%");
		pid_field.setHeight("-1px");
		verticalLayout_1.addComponent(pid_field);

		// package_table
		package_table = new Table();
		package_table.setImmediate(false);
		package_table.setWidth("100.0%");
		package_table.setHeight("-1px");
		verticalLayout_1.addComponent(package_table);
		verticalLayout_1.setExpandRatio(package_table, 1.0f);

		return verticalLayout_1;
	}

}
